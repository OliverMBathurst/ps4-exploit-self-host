import React, { memo, useContext } from 'react'
import { Themes } from '../../constants'
import { ThemeContext } from '../../context'
import './styles.scss'

const ThemeSelector = () => {
    const { theme, onThemeChange } = useContext(ThemeContext)

    const onThemeChangeInternal = (e: React.ChangeEvent<HTMLSelectElement>) => {
        const themes = Themes.filter(x => x.name === e.target.value)
        if (themes.length > 0) {
            onThemeChange(themes[0])
        }
    }

    return (
        <div className="theme-selector">
            <span className="theme-selector__descriptor">
                Theme:
            </span>
            <select
                className="theme-selector__select"
                defaultValue={theme.name}
                onChange={onThemeChangeInternal}
            >
                {Themes.map(theme => {
                    return (
                        <option
                            className="theme-selector__select__option"
                            value={theme.name}
                            key={theme.styleName}
                        >
                            {theme.name}
                        </option>)
                })}
            </select>
        </div>)
}

export default memo(ThemeSelector)