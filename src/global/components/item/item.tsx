import React, { useCallback, useContext, useMemo } from 'react'
import { DirectoryIcon, FileIcon } from '../../../assets'
import { CacheContext } from '../../context'
import { ItemType } from '../../enums'
import './styles.scss'

interface IItemProps {
    cacheIdentifier?: string
    text: string
    title: string
    color?: string
    itemType: ItemType
    onClick: () => void
}

const Item = (props: IItemProps) => {
    const {
        cacheIdentifier,
        text,
        title,
        itemType,
        color,
        onClick
    } = props

    const { payloadCacheKeysSet } = useContext(CacheContext)

    const isCached = useMemo(() => {
        return payloadCacheKeysSet
            && cacheIdentifier !== undefined
            && payloadCacheKeysSet.has(cacheIdentifier)
    }, [payloadCacheKeysSet, cacheIdentifier])

    const style = useMemo(() => {
        return {
            background: color
        }
    }, [color])

    const Icon = useCallback(() => {
        switch (itemType) {
            case ItemType.Payload:
                return <FileIcon />
            case ItemType.Directory:
            default:
                return <DirectoryIcon />
        }
    }, [itemType])

    return (
        <button
            className={`item${isCached ? "--cached" : ""} clickable-item`}
            style={style}
            title={title}
            onClick={onClick}
        >
            <Icon />
            <span className="item__text medium-text no-select">
                {text}
            </span>
        </button>)
}

export default Item