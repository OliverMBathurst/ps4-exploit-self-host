import NineZeroZeroManifest from '../../manifests/manifest_900.json';
import RootManifest from '../../manifests/manifest_root.json';
import { FirmwareVersion } from '../enums';
import { toMap } from '../helpers';
import { IDirectory } from '../interfaces';

interface IManifestService {
    getDirectoryMapByFirmwareVersion: (firmwareVersion: FirmwareVersion) => Map<number, IDirectory>
    getManifestByFirmwareVersion: (firmwareVersion: FirmwareVersion) => IDirectory[]
}

class ManifestService implements IManifestService {

    getDirectoryMapByFirmwareVersion = (firmwareVersion: FirmwareVersion) => {
        const dirs = this.getManifestByFirmwareVersion(firmwareVersion)
        return toMap(dirs, dir => dir.id, dir => dir)
    }

    getManifestByFirmwareVersion = (firmwareVersion: FirmwareVersion): IDirectory[] => {
        if (firmwareVersion === FirmwareVersion.NinePointZeroZero) {
            return NineZeroZeroManifest
        }

        return RootManifest
    }
}

export default ManifestService