import NineZeroZeroManifest from '../../manifests/manifest_900.json';
import RootManifest from '../../manifests/manifest_root.json';
import { FirmwareVersion } from '../enums';
import { toMap } from '../helpers';
import { IDirectory } from '../interfaces';

interface IManifestService {
    getDirectoryMapByFirmwareVersion: (version: FirmwareVersion) => Map<number, IDirectory>
    getManifestByFirmwareVersionNumber: (version: FirmwareVersion) => IDirectory[]
}

class ManifestService implements IManifestService {
    getDirectoryMapByFirmwareVersion = (version: FirmwareVersion) => {
        const dirs = this.getManifestByFirmwareVersionNumber(version)
        return toMap(dirs, dir => dir.id, dir => dir)
    }

    getManifestByFirmwareVersionNumber = (version: FirmwareVersion): IDirectory[] => {
        switch (version) {
            case FirmwareVersion.NinePointZeroZero:
                return NineZeroZeroManifest
            default:
                return RootManifest
        }
    }
}

export default ManifestService