import { HttpStatusCode } from "../../../enums";
import { IPayload, IPayloadPostResponse, IPayloadService } from "../../../interfaces";
import { AbstractPayloadService } from "../../abstract";

class PayloadService extends AbstractPayloadService implements IPayloadService {
    constructor() {
        super("127.0.0.1:8080", "127.0.0.1:8080/status")
    }

    handlePayload = (payload: IPayload, data: ArrayBuffer): Promise<IPayloadPostResponse> => {
        return new Promise<IPayloadPostResponse>((resolve) => {
            try {
                if (payload.isHen) {
                    window.HEN = data
                    window.POC()
                    resolve({
                        statusCode: HttpStatusCode.Status200OK
                    })
                } else {
                    super.postBINLoaderPayload(data)
                        .then(res => resolve(res))
                }
            } catch (e) {
                console.error(e)

                resolve({
                    statusCode: HttpStatusCode.Status500InternalServerError,
                    message: e as string
                })
            }
        })
    }
}

export default PayloadService