import { IModalInfo, IPayload, IPayloadService } from "../../../interfaces";
import { AbstractPayloadService } from "../../abstract";

class PayloadService extends AbstractPayloadService implements IPayloadService {
    portNumber: number = 9090

    handlePayload = (
        payload: IPayload,
        data: ArrayBuffer,
        binLoaderStatusEndpoint: string = `http://127.0.0.1:${this.portNumber}/status`,
        binLoaderEndpoint: string = `http://127.0.0.1:${this.portNumber}`
    ): Promise<IModalInfo | null> => {
        return new Promise<IModalInfo | null>((resolve) => {
            try {
                if (payload.isHen) {
                    window.HEN = data
                    window.POC()
                    resolve(null)
                } else {
                    this.postBINLoaderPayload(
                        binLoaderStatusEndpoint,
                        binLoaderEndpoint,
                        data).then(resolve)
                }
            } catch (e) {
                console.error(e)
                resolve({
                    title: "Unspecified Error",
                    message: e as string
                })
            }
        })
    }
}

export default PayloadService