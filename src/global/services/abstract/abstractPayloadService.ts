import { ModalType } from "../../enums"
import { IModalInfo } from "../../interfaces"

interface IAbstractPayloadService {
    postBINLoaderPayload: (
        binLoaderStatusEndpoint: string,
        binLoaderEndpoint: string,
        payload: ArrayBuffer,
        addModalCallback?: (modalInfo: IModalInfo) => void) => void
}

abstract class AbstractPayloadService implements IAbstractPayloadService {
    postBINLoaderPayload = (
        binLoaderStatusEndpoint: string,
        binLoaderEndpoint: string,
        payload: ArrayBuffer,
        addModalCallback?: (modalInfo: IModalInfo) => void
    ) => {
        var endpointStatusXhr = new XMLHttpRequest()
        endpointStatusXhr.open("POST", binLoaderStatusEndpoint)
        endpointStatusXhr.send()
        endpointStatusXhr.onerror = function () {
            if (addModalCallback) {
                addModalCallback({
                    title: "BinLoader Error",
                    message: "Please enable BinLoader."
                })
            }
        }

        endpointStatusXhr.onload = function () {
            if (JSON.parse(endpointStatusXhr.responseText).status === "ready") {
                var xhr = new XMLHttpRequest();
                xhr.open("POST", binLoaderEndpoint, true);
                xhr.send(payload);

                if (addModalCallback) {
                    addModalCallback({
                        title: "BinLoader",
                        message: "Sent payload.",
                        type: ModalType.FadeOut
                    })
                }
            } else if (addModalCallback) {
                addModalCallback({
                    title: "BinLoader Error",
                    message: "BinLoader is busy."
                })
            }
        }
    }
}

export default AbstractPayloadService