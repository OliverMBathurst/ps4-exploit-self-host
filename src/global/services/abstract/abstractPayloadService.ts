import axios from "axios";
import { HttpStatusCode } from "../../enums";

interface IAbstractPayloadService {
    postBINLoaderPayload: (payload: ArrayBuffer) => void
}

abstract class AbstractPayloadService implements IAbstractPayloadService {
    private binLoaderEndpoint: string
    private binLoaderStatusEndpoint: string

    constructor(binLoaderEndpoint: string, binLoaderStatusEndpoint: string) {
        this.binLoaderEndpoint = binLoaderEndpoint
        this.binLoaderStatusEndpoint = binLoaderStatusEndpoint
    }

    postBINLoaderPayload = (payload: ArrayBuffer) => {
        axios.post(this.binLoaderStatusEndpoint).then(res => {
            switch (res.status) {
                case HttpStatusCode.Status200OK:
                    axios.post<ArrayBuffer>(this.binLoaderEndpoint, payload)
                    break
                case HttpStatusCode.Status404NotFound:
                    alert("BinLoader not enabled")
                    break
                default:
                    alert(`Error trying to fetch status of BinLoader ${res.status}`)
            }
        })
    }
}

export default AbstractPayloadService