import { HttpStatusCode, ModalType } from "../../enums"
import { IModalInfo } from "../../interfaces"

interface IAbstractPayloadService {
    postBINLoaderPayload: (
        binLoaderStatusEndpoint: string,
        binLoaderEndpoint: string,
        payload: Uint8Array,
        addModalCallback?: (modalInfo: IModalInfo) => void) => void
}

abstract class AbstractPayloadService implements IAbstractPayloadService {
    postBINLoaderPayload = (
        binLoaderStatusEndpoint: string,
        binLoaderEndpoint: string,
        payload: Uint8Array,
        addModalCallback?: (modalInfo: IModalInfo) => void
    ) => {
        var payloadEndpointStatusXhr = new XMLHttpRequest()
        payloadEndpointStatusXhr.open("POST", binLoaderStatusEndpoint)
        payloadEndpointStatusXhr.send()
        payloadEndpointStatusXhr.onerror = function () {
            if (addModalCallback) {
                addModalCallback({
                    title: "BinLoader Error",
                    message: "Please enable BinLoader."
                })
            }
        }

        payloadEndpointStatusXhr.onload = function () {
            if (payloadEndpointStatusXhr.status === HttpStatusCode.Status200OK) {
                var payloadPostXhr = new XMLHttpRequest();
                payloadPostXhr.open("POST", binLoaderEndpoint, true);
                payloadPostXhr.send(payload);

                payloadPostXhr.onload = function () {
                    if (addModalCallback) {
                        addModalCallback({
                            title: "BinLoader",
                            message: "Sent payload.",
                            type: ModalType.FadeOut,
                            hasDismissButton: false
                        })
                    }
                }
            } else if (addModalCallback) {
                addModalCallback({
                    title: "BinLoader Error",
                    message: "BinLoader is busy."
                })
            }
        }
    }
}

export default AbstractPayloadService