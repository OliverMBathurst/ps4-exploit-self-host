import { HttpStatusCode } from "../enums";
import { isSuccessStatusCode } from "../helpers";
import { IModalInfo } from "../interfaces";

interface IBinService {
    getBIN: (
        path: string,
        onSuccessCallback: (buffer: Uint8Array) => void,
        addModalCallback?: (modalInfo: IModalInfo) => void
    ) => void
}

class BinService implements IBinService {
    getBIN = (
        path: string,
        onSuccessCallback: (buffer: Uint8Array) => void,
        addModalCallback?: (modalInfo: IModalInfo) => void
    ) => {
        var xhr = new XMLHttpRequest()
        xhr.open('GET', path)
        xhr.send()
        xhr.responseType = "arraybuffer"
        xhr.onload = function () {
            if ((isSuccessStatusCode(xhr.status) || xhr.status === HttpStatusCode.Status304NotModified) && xhr.response) {
                onSuccessCallback(xhr.response)
            } else if (addModalCallback) {
                addModalCallback({
                    title: "BIN Error",
                    message: `Failed to retrieve BIN file: ${xhr.status}`
                })
            }
        }

        xhr.onerror = function () {
            if (addModalCallback) {
                addModalCallback({
                    title: "BIN Error",
                    message: `Failed to retrieve BIN file: ${xhr.status}`
                })
            }
        }
    }
}

export default BinService