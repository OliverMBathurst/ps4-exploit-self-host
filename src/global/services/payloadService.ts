import axios from "axios";

interface IPayloadService {
    loadViaGoldHen: (payload: ArrayBuffer) => void
}

class PayloadService implements IPayloadService {
    private binLoaderEndpoint: string = "127.0.0.1:8080"
    private binLoaderStatusEndpoint: string = "127.0.0.1:8080/status"

    loadViaGoldHen = (payload: ArrayBuffer) => {
        axios.post(this.binLoaderStatusEndpoint).then(res => {
            switch (res.status) {
                case 200:
                    this.sendPayload(this.binLoaderEndpoint,
                        payload,
                        () => alert("Payload Loaded"),
                        () => alert("Failed to send the payload")
                    )
                    break
                case 404:
                    alert("BinLoader not enabled")
                    break
                default:
                    alert(`Error trying to fetch status of BinLoader ${res.status}`)
            }
        })
    }

    private sendPayload = (
        url: string,
        data: ArrayBuffer,
        onSuccess: () => void,
        onFailure: () => void) => {
        axios.post<ArrayBuffer>(url, data).then(res => {
            if (res.status === 200) {
                onSuccess()
            } else {
                onFailure()
            }
        })
    }
}

export default PayloadService