import React, { createContext, useMemo, useState } from 'react'

interface IBrowserContextComponentProps {
    children: React.ReactNode
}

interface IBrowserContext {
    isBrowserSupported: boolean
    ps4IPAddress: string
    setPS4IPAddress: (ipAddress: string) => void
}

export const BrowserContext = createContext<IBrowserContext>({
    isBrowserSupported: true,
    ps4IPAddress: "",
    setPS4IPAddress: (_: string) => Function.prototype
})

const BrowserContextComponent = (props: IBrowserContextComponentProps) => {
    const { children } = props
    const [ps4IPAddress, setPS4IPAddress] = useState<string>("")

    const isBrowserSupported: boolean = useMemo(() => {
        return navigator
            && navigator.userAgent.indexOf("PlayStation") !== -1
            && navigator.userAgent.indexOf("AppleWebKit") !== -1
    }, [])

    return (
        <BrowserContext.Provider value={{
            isBrowserSupported: isBrowserSupported,
            ps4IPAddress: ps4IPAddress,
            setPS4IPAddress: setPS4IPAddress
        }}>
            {children}
        </BrowserContext.Provider>)
}

export default BrowserContextComponent