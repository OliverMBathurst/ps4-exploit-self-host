import React, { createContext, useMemo } from 'react'

interface IBrowserContextComponentProps {
    children: React.ReactNode
}

interface IBrowserContext {
    isSupportedBrowser: boolean
}

export const BrowserContext = createContext<IBrowserContext>({ isSupportedBrowser: true })

const BrowserContextComponent = (props: IBrowserContextComponentProps) => {
    const { children } = props

    const isSupported: boolean = useMemo(() => {
        return navigator
            && navigator.userAgent.indexOf("PlayStation") !== -1
            && navigator.userAgent.indexOf("AppleWebKit") !== -1
    }, [])

    return (
        <BrowserContext.Provider value={{ isSupportedBrowser: isSupported }}>
            {children}
        </BrowserContext.Provider>)
}

export default BrowserContextComponent