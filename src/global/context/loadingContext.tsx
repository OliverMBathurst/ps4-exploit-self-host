import React, { createContext, useState } from 'react'

interface ILoadingContextComponentProps {
    children: React.ReactNode
}

interface ILoadingContext {
    loading: boolean
    setLoading: (loading: boolean) => void
}

export const LoadingContext = createContext<ILoadingContext>({
    loading: false,
    setLoading: (_: boolean) => Function.prototype
})

const LoadingContextComponent = (props: ILoadingContextComponentProps) => {
    const { children } = props
    const [loading, setLoading] = useState(false)

    return (
        <LoadingContext.Provider value={{
            loading: loading,
            setLoading: setLoading
        }}>
            {children}
        </LoadingContext.Provider>)
}

export default LoadingContextComponent