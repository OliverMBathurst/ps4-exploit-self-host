import React, { createContext, useState } from 'react'
import { FirmwareVersion } from '../enums'

interface IFirmwareVersionContext {
    firmwareVersion: FirmwareVersion
    setFirmwareVersion: (version: FirmwareVersion) => void
}

interface IFirmwareVersionContextComponentProps {
    children: React.ReactNode
}

export const FirmwareVersionContext = createContext<IFirmwareVersionContext>({
    firmwareVersion: FirmwareVersion.Undefined,
    setFirmwareVersion: (_: FirmwareVersion) => Function.prototype
})

const FirmwareVersionContextComponent = (props: IFirmwareVersionContextComponentProps) => {
    const { children } = props
    const [version, setVersion] = useState<FirmwareVersion>(FirmwareVersion.Undefined)

    return (
        <FirmwareVersionContext.Provider value={{
            firmwareVersion: version,
            setFirmwareVersion: setVersion
        }}>
            {children}
        </FirmwareVersionContext.Provider>)
}

export default FirmwareVersionContextComponent