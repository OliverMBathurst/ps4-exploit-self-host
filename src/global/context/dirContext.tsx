import React, { createContext, useEffect, useState } from 'react';
import config from '../../manifest_900.json';
import { toMap } from '../helpers';
import { IDirectory } from '../interfaces';

interface IDirContextProps {
    children: React.ReactNode
}

interface IDirectoryContext {
    directoryMap: Map<number, IDirectory> | null
}

export const DirectoryContext = createContext<IDirectoryContext>({ directoryMap: null })

const DirContext = (props: IDirContextProps) => {
    const { children } = props
    const [directoryMap, setDirectoryMap] = useState<Map<number, IDirectory> | null>(null)

    useEffect(() => {
        let mounted = true

        const directories: IDirectory[] = config
        const map = toMap(directories, tuple => tuple.id, tuple => tuple)

        if (mounted) {
            setDirectoryMap(map)
        }

        return () => {
            mounted = false
        }
    }, [])

    return (
        <DirectoryContext.Provider value={{ directoryMap: directoryMap }}>
            {children}
        </DirectoryContext.Provider>)
}

export default DirContext